# -*- coding: utf-8 -*-
# Generated by Django 1.10.4 on 2016-12-21 12:52
from __future__ import unicode_literals

import diagnosis.validators
from django.db import migrations, models
import django.db.models.deletion
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_id', models.CharField(max_length=256, verbose_name='Client ID')),
                ('datetime', models.DateTimeField(auto_now=True, verbose_name='DateTime')),
                ('text', models.CharField(max_length=256, verbose_name='Entered Text')),
            ],
        ),
        migrations.CreateModel(
            name='Condition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, verbose_name='Title')),
                ('description', tinymce.models.HTMLField(verbose_name='Description')),
            ],
        ),
        migrations.CreateModel(
            name='Diagnosis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(max_length=128, verbose_name='Name')),
                ('title', models.CharField(max_length=128, verbose_name='Title')),
                ('active', models.BooleanField(default=False, verbose_name='Active')),
                ('description', tinymce.models.HTMLField(verbose_name='Description')),
                ('mod_datetime', models.DateTimeField(auto_now=True, verbose_name='Modification DateTime')),
                ('conditions', models.ManyToManyField(blank=True, related_name='conditions', to='diagnosis.Condition')),
            ],
            options={
                'verbose_name_plural': 'Diagnosis',
                'ordering': ['mod_datetime'],
                'verbose_name': 'Diagnosis',
            },
        ),
        migrations.CreateModel(
            name='OfferedAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_type', models.CharField(choices=[('I', 'input'), ('C', 'choice')], default='C', max_length=1, verbose_name='Type')),
                ('prefix', models.CharField(blank=True, max_length=128, null=True, verbose_name='Text Prefix')),
                ('text', models.CharField(blank=True, max_length=128, null=True, verbose_name='Text')),
                ('sufix', models.CharField(blank=True, max_length=128, null=True, verbose_name='Text Sufix')),
                ('default', models.CharField(blank=True, max_length=128, null=True, verbose_name='Default Value')),
                ('validation_format', models.CharField(blank=True, max_length=256, null=True, validators=[diagnosis.validators.validate_regex], verbose_name='Validation Regex')),
                ('sort_index', models.PositiveIntegerField(default=1, verbose_name='Sort By Asc')),
            ],
            options={
                'verbose_name_plural': 'Offered Answers',
                'ordering': ['sort_index'],
                'verbose_name': 'Offered Answer',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_type', models.CharField(choices=[('I', 'input'), ('R', 'choice'), ('C', 'multiple choice'), ('RI', 'choice with input'), ('CI', 'multiple choice with input')], default='I', max_length=2, verbose_name='Type')),
                ('text', models.CharField(max_length=256, verbose_name='Text')),
                ('requires_answer', models.BooleanField(default=True, verbose_name='Requires Answer')),
                ('sort_index', models.PositiveIntegerField(default=1, verbose_name='Sort By Asc')),
                ('diagnosis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='diagnosis.Diagnosis', verbose_name='Diagnosis')),
                ('next', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='diagnosis.Question', verbose_name='Next Question')),
            ],
            options={
                'verbose_name_plural': 'Questions',
                'ordering': ['sort_index'],
                'verbose_name': 'Question',
            },
        ),
        migrations.AddField(
            model_name='offeredanswer',
            name='next_question',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='next_question', to='diagnosis.Question', verbose_name='Next Question'),
        ),
        migrations.AddField(
            model_name='offeredanswer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='diagnosis.Question', verbose_name='Question'),
        ),
        migrations.AddField(
            model_name='answer',
            name='answer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='diagnosis.OfferedAnswer', verbose_name='Offered Answer'),
        ),
    ]
